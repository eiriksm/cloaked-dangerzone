// Generated by CoffeeScript 1.7.1
(function() {
  var app, auth, basic, compress, express, index, octo, server, util;

  express = require('express');

  compress = require('compression');

  auth = require('http-auth');

  octo = require('tripping-octo-nemesis');

  app = express();

  app.users = {};

  module.exports = app;

  basic = auth.basic({
    realm: '3t login'
  }, function(username, password, callback) {
    if (!app.users[username]) {
      octo.init({
        username: username,
        password: password
      }, false, function(err, _) {
        if (!err) {
          callback(true);
          app.users[username] = {
            password: password,
            username: username
          };
          return;
        }
        callback(false);
      });
      return;
    }
    return callback(app.users[username] && app.users[username].password.toString() === password.toString());
  });

  app.use(auth.connect(basic));

  app.cache = {};

  util = require('util');

  index = require('./routes/index');

  server = {};

  app.init = function(ip, port) {
    if (ip == null) {
      ip = '127.0.0.1';
    }
    if (port == null) {
      port = 8080;
    }
    console.log(util.format('App started. Listening on %d', port));
    app.opts = {
      ip: ip,
      port: port
    };
    return server = app.listen(port, ip);
  };

  app.close = function() {
    console.log('Closing server with the following options:', app.opts);
    return server.close();
  };

  app.use(compress());

  app.use(express["static"](__dirname + '/../static/dartangular/web', {
    maxAge: 3600000 * 24 * 30
  }));

  app.use(express["static"](__dirname + '/../static/dartangular/build/web', {
    maxAge: 3600000 * 24 * 30
  }));

  app.get('/api/userstatus/:user', index.user);

  app.get('/api/user', index.allusers);

  app.get('/api/unbook/:user/:id', index.unbook);

  app.get('/', index.index);

}).call(this);
