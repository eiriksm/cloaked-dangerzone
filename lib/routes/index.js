// Generated by CoffeeScript 1.7.1
(function() {
  var app, config, config_file, error, fs, settings, users;

  config = require('yaml-config');

  app = require('../app');

  fs = require('fs');

  users = {};

  config_file = './config.yml';

  settings = config.readConfig(config_file, 'default');

  if (!settings.users) {
    if (process.env.CLOAKED_USERS) {
      try {
        settings.users = JSON.parse(process.env.CLOAKED_USERS);
        fs.open(config_file, 'w', function(err, fd) {
          if (!err) {
            return fs.appendFile(config_file, 'default:\n', function(e) {
              if (!e) {
                return config.updateConfig(settings, config_file, 'default');
              }
            });
          }
        });
      } catch (_error) {
        error = _error;
        console.error(error);
      }
    }
  }

  if (settings && settings.users) {
    console.log('is here');
    console.log(settings);
    settings.users.forEach(function(v) {
      return users[v.username] = v;
    });
  }

  module.exports = {
    user: function(req, res) {
      var c, octo, user;
      user = req.params.user;
      if (!users[user]) {
        res.send(404);
        return;
      }
      if (app.cache[user]) {
        c = app.cache[user].unix;
        if (c && c > (Date.now() - 60000)) {
          res.send(app.cache[user]);
          return;
        }
      }
      octo = require('tripping-octo-nemesis');
      return octo.init(users[user], false, function(err, _) {
        return octo.status(function(err, result) {
          var data;
          if (!err) {
            data = {
              status: result,
              updated: new Date(),
              unix: Date.now()
            };
            app.cache[user] = data;
            res.send(data);
            return;
          }
          return res.send(500, 'problems');
        });
      });
    },
    allusers: function(req, res) {
      var response;
      response = [];
      settings.users = settings.users || [];
      settings.users.forEach(function(n) {
        return response.push(n.username);
      });
      return res.json(response);
    },
    index: function(req, res) {
      return res.sendfile("static/dartangular/web/index.html");
    }
  };

}).call(this);
