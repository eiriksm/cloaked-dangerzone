// Generated by CoffeeScript 1.7.1
(function() {
  var app, config, error, octo, settings, users;

  octo = require('tripping-octo-nemesis');

  config = require('yaml-config');

  app = require('../app');

  users = {};

  settings = config.readConfig('./config.yml');

  if (!settings.users) {
    if (process.env.CLOAKED_USERS) {
      console.log('Trying environment variables for users');
      try {
        settings.users = JSON.parse(process.env.CLOAKED_USERS);
      } catch (_error) {
        error = _error;
      }
    }
  }

  if (settings && settings.users) {
    settings.users.forEach(function(v) {
      return users[v.username] = v;
    });
  }

  module.exports = {
    user: function(req, res) {
      var c, user;
      user = req.params.user;
      if (!users[user]) {
        res.send(404);
        return;
      }
      if (app.cache[user]) {
        c = app.cache[user].updated;
        if (c && c.getTime() < (new Date().getTime() + 60000)) {
          res.send(app.cache[user]);
        }
        return;
      }
      return octo.init(users[user], false, function(err, _) {
        return octo.status(function(err, result) {
          var data;
          if (!err) {
            data = {
              status: result,
              updated: new Date()
            };
            app.cache[user] = data;
            res.send(data);
            return;
          }
          return res.send(500, 'problems');
        });
      });
    },
    allusers: function(req, res) {
      var response;
      response = [];
      settings.users.forEach(function(n) {
        return response.push(n.username);
      });
      return res.json(response);
    },
    index: function(req, res) {
      return res.sendfile("static/dartangular/web/index.html");
    }
  };

}).call(this);
